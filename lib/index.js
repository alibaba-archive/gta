// Generated by CoffeeScript 1.6.3
(function() {
  var Gta, exports,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  exports = exports || this;

  Gta = (function() {
    function Gta(options) {
      var Provider, option, provider;
      this.options = options;
      this.providers = {};
      for (provider in options) {
        option = options[provider];
        Provider = Gta["" + (provider[0].toUpperCase()) + provider.slice(1)];
        if (Provider != null) {
          this.providers[provider] = new Provider(option);
        }
      }
      if (window.jQuery) {
        this.delegateEvents();
      }
    }

    Gta.prototype.pageview = function() {
      var name, provider, _ref;
      _ref = this.providers;
      for (name in _ref) {
        provider = _ref[name];
        provider.pageview.apply(provider, arguments);
      }
      return this;
    };

    Gta.prototype.event = function() {
      var name, provider, _ref;
      _ref = this.providers;
      for (name in _ref) {
        provider = _ref[name];
        provider.event.apply(provider, arguments);
      }
      return this;
    };

    Gta.prototype.delegateEvents = function() {
      var _this = this;
      return $(document).on('click.gta', '[data-gta="event"]', function(e) {
        var $target, action, category, label, value;
        $target = $(e.currentTarget);
        console.log($target.html());
        category = $target.data('category') || $target[0].tagName;
        label = $target.data('label') || $target[0].className;
        action = $target.data('action') || e.type;
        value = $target.data('value') || $target.text();
        return _this.event(category, action, label, value);
      });
    };

    Gta.appendScript = function(script) {
      var dom, head, text;
      dom = document.createElement('script');
      text = document.createTextNode(script);
      dom.appendChild(text);
      head = document.getElementsByTagName('head')[0];
      return head.appendChild(dom);
    };

    Gta.Base = (function() {
      function Base(option) {
        this.option = option;
        this.option.account = option.account || '';
        this._q = this._initial();
      }

      return Base;

    })();

    Gta.Google = (function(_super) {
      __extends(Google, _super);

      function Google(option) {
        Google.__super__.constructor.apply(this, arguments);
      }

      Google.prototype._initial = function() {
        if (window.ga == null) {
          Gta.appendScript("(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){\n(i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),\nm=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)\n})(window,document,'script','//www.google-analytics.com/analytics.js','ga');\nga('create', '" + this.option.account + "');\nga('send', 'pageview');");
        }
        return window.ga;
      };

      Google.prototype.pageview = function() {
        var args, data, i, val;
        args = (function() {
          var _results;
          _results = [];
          for (i in arguments) {
            val = arguments[i];
            _results.push(val);
          }
          return _results;
        }).apply(this, arguments);
        data = typeof args[0] === 'object' ? args[0] : args.join('_');
        return this._q('send', 'pageview', data);
      };

      Google.prototype.event = function() {
        var args, data, i, val;
        args = (function() {
          var _results;
          _results = [];
          for (i in arguments) {
            val = arguments[i];
            _results.push(val);
          }
          return _results;
        }).apply(this, arguments);
        data = ['send', 'event'].concat(args);
        return this._q.apply(this._q, data);
      };

      return Google;

    })(Gta.Base);

    Gta.Baidu = (function(_super) {
      __extends(Baidu, _super);

      function Baidu(option) {
        Baidu.__super__.constructor.apply(this, arguments);
      }

      Baidu.prototype._initial = function() {
        if (window._hmt == null) {
          Gta.appendScript("var _hmt = _hmt || [];\n(function() {\n  var hm = document.createElement(\"script\");\n  hm.src = \"//hm.baidu.com/hm.js?" + this.option.account + "\";\n  var s = document.getElementsByTagName(\"script\")[0];\n  s.parentNode.insertBefore(hm, s);\n})();");
        }
        return window._hmt;
      };

      Baidu.prototype.pageview = function() {
        var args, data, i, v, val;
        args = (function() {
          var _results;
          _results = [];
          for (i in arguments) {
            val = arguments[i];
            _results.push(val);
          }
          return _results;
        }).apply(this, arguments);
        if (typeof args[0] === 'object') {
          if (args[0]['page'] != null) {
            data = args[0]['page'];
          } else {
            data = (function() {
              var _ref, _results;
              _ref = args[0];
              _results = [];
              for (i in _ref) {
                v = _ref[i];
                _results.push(v);
              }
              return _results;
            })();
            data = data.join('_');
          }
        } else {
          data = args.join('_');
        }
        return this._q.push(['_trackPageview', data]);
      };

      Baidu.prototype.event = function() {
        var args, data, i, val;
        args = (function() {
          var _results;
          _results = [];
          for (i in arguments) {
            val = arguments[i];
            _results.push(val);
          }
          return _results;
        }).apply(this, arguments);
        data = ['_trackEvent'].concat(args);
        return this._q.push(data);
      };

      return Baidu;

    })(Gta.Base);

    return Gta;

  })();

  exports.Gta = Gta;

}).call(this);
